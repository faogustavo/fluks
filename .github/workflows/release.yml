name: Lint
on:
  push:
    tags:
      - 'v*.*.*'
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Gradle Wraper Cache
        uses: actions/cache@v1
        with:
          path: ~/.gradle/wrapper/
          key: ${{ runner.OS }}-gradle-wraper-cache

      - name: Gradle test for JVM
        run: ./gradlew jvmTest
  linuxDeploy:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Get Version
        id: vars
        run: echo ::set-output name=tag::${GITHUB_REF#refs/*/v}

      - name: Gradle Wraper Cache
        uses: actions/cache@v1
        with:
          path: ~/.gradle/wrapper/
          key: ${{ runner.OS }}-gradle-wraper-cache

      - name: Build
        run: ./gradlew assemble

      - name: Deploy
       env:
         RELEASE_VERSION: ${{ steps.vars.outputs.tag }}
       run: ./gradlew publish -DdeploymentVersion=$RELEASE_VERSION
  mingwDeploy:
    needs: linuxDeploy
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2

      - name: Get Version
        id: vars
        run: echo ::set-output name=tag::${GITHUB_REF#refs/*/v}

      - name: Gradle Wraper Cache
        uses: actions/cache@v1
        with:
          path: ~/.gradle/wrapper/
          key: ${{ runner.OS }}-gradle-wraper-cache

      - name: Build
        run: ./gradlew assemble

      - name: Deploy
       env:
         RELEASE_VERSION: ${{ steps.vars.outputs.tag }}
       run: ./gradlew publish -DdeploymentVersion=$RELEASE_VERSION
  macosDeploy:
    needs: mingwDeploy
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2

      - name: Get Version
        id: vars
        run: echo ::set-output name=tag::${GITHUB_REF#refs/*/v}

      - name: Gradle Wraper Cache
        uses: actions/cache@v1
        with:
          path: ~/.gradle/wrapper/
          key: ${{ runner.OS }}-gradle-wraper-cache

      - name: Build
        run: ./gradlew assemble

      - name: Deploy
       env:
         RELEASE_VERSION: ${{ steps.vars.outputs.tag }}
       run: ./gradlew publish -DdeploymentVersion=$RELEASE_VERSION
